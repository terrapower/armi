[tox]
envlist = py38,lint,cov
# need pip at least with --prefer-binary
requires =
	pip >= 20.2

[testenv]
basepython = {env:PYTHON3_PATH:python3}
deps=
    pip >= 20.2
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-testing.txt
setenv =
    PYTHONPATH = {toxinidir}
    USERNAME = armi

[testenv:test]
commands =
    pytest --ignore=armi/utils/tests/test_gridGui.py -n 4 armi

[testenv:doc]
whitelist_externals =
    /usr/bin/git
    /usr/bin/make
deps=
    -r{toxinidir}/doc/requirements-docs.txt
changedir = doc
commands =
    git submodule init
    git submodule update
    make html

# First, run code coverage over the unit tests that run MPI library code.
[testenv:cov1]
deps=
    pip>=20.2
    mpi4py
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-testing.txt
whitelist_externals =
    /usr/bin/mpiexec
commands =
    mpiexec -n 2 --use-hwthread-cpus coverage run --rcfile=.coveragerc -m pytest --cov=armi --cov-config=.coveragerc --ignore=venv armi/tests/test_mpiFeatures.py

# Second, run code coverage over the rest of the unit tests, and combine the coverage results together
[testenv:cov2]
deps=
    pip>=20.2
    mpi4py
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-testing.txt
whitelist_externals =
    /usr/bin/mpiexec
commands =
    coverage run --rcfile=.coveragerc -m pytest -n 4 --cov=armi --cov-config=.coveragerc --cov-append --ignore=armi/utils/tests/test_gridGui.py --ignore=venv armi
    coverage combine --rcfile=.coveragerc --keep -a

# NOTE: This only runs the MPI unit tests.
# NOTE: This will only work in POSIX/BASH Linux.
[testenv:mpitest]
deps=
    pip >= 20.2
    mpi4py
whitelist_externals =
    /usr/bin/mpiexec
commands =
    pip install -r requirements.txt
    pip install -r requirements-testing.txt
    mpiexec -n 2 --use-hwthread-cpus pytest armi/tests/test_mpiFeatures.py

[testenv:lint]
ignore_errors = true
commands =
     - pylint armi --rcfile={toxinidir}/pylintrc

[testenv:report]
skip_install = true
deps=
    coveralls
commands =
    coverage report
    coverage html
    coveralls --service=github
depends =
    cov
passenv = TOXENV CI GITHUB_*

[testenv:manifest]
basepython = {env:PYTHON3_PATH:python3}
setenv =
    PYTHONPATH = {toxinidir}
    USERNAME = armi
commands =
    python .github/workflows/validatemanifest.py

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase
