=======================
ARMI v0.2 Release Notes
=======================

ARMI v0.2.7
===========
Release Date: TBD

What's new in ARMI
------------------
#. TBD
#. TBD

Bug fixes
---------
#. Fixed TBD
#. Fixed TBD


ARMI v0.2.6
===========
Release Date: 2023-02-09

What's new in ARMI
------------------
#. The ``Material`` class no longer subclasses ``Composite`` (`PR#1062 <https://github.com/terrapower/armi/pull/1062>`_)
#. Froze the NumPy version to <= 1.23.5 (`PR#1035 <https://github.com/terrapower/armi/pull/1035>`_) to continue to support NumPy jagged arrays in the DatabaseInterface.
#. Split 3 classes in ``database3.py`` into 3 files (`PR#955 <https://github.com/terrapower/armi/pull/955>`_)
#. Split algorithms specific to hex assemblies out of ``FuelHandler``. (`PR#962 <https://github.com/terrapower/armi/pull/962>`_)
#. Added 4614 nuclides to decouple the loading of RIPL-3 data from the standard framework run. (`PR#998 <https://github.com/terrapower/armi/pull/998>`_)
#. Overhaul of the tight coupling routine in ARMI, and removal of ``looseCoupling`` setting. (`PR #1033 <https://github.com/terrapower/armi/pull/1033>`_)
#. Added ``savePhysicsFiles`` setting to copy physics kernel I/O to directories organized by cycle and time step (e.g., c2n1). (`PR#952 <https://github.com/terrapower/armi/pull/952>`_)
#. Add ``pinQuantities`` parameter category for block params that have spatial distribution.
#. Use ``r.core.p.axialMesh`` instead of ``r.core.refAssem.getAxialMesh()`` for the uniform mesh converter. (`PR#959 <https://github.com/terrapower/armi/pull/959>`_)
#. Add group structures for 21- and 94-groups used in photon transport.
#. Add block parameter, ``fuelCladLocked``, to track whether or not the fuel and clad are locked. (`PR#1038 <https://github.com/terrapower/armi/pull/1038>`_)
#. An explicit fission product modeling option was added. (`PR#1022 <https://github.com/terrapower/armi/pull/1022>`_)
#. Axially expand from cold to hot before deepcopy of assemblies into reactor; improving speed. (`PR#1047 <https://github.com/terrapower/armi/pull/1047>`_)
#. Add a how-to on restart calculations in the docs.
#. General improvements to efficiency in uniform mesh conversion. (`PR#1042 <https://github.com/terrapower/armi/pull/1042>`_)
#. Allow MCNP material card number to be defined after the card is written. (`PR#1086 <https://github.com/terrapower/armi/pull/1086>`_)
#. Refine logic for ``Block.getNumPins()`` to only count components that are actually pins. (`PR#1098 <https://github.com/terrapower/armi/pull/1098>`_)
#. Improve handling of peak/max parameters by the ``UniformMeshConverter`` parameter mapper. (`PR#1108 <https://github.com/terrapower/armi/pull/1108>`_)
#. Calculate block kgHM and kgFis on core loading and after shuffling. (`PR#1136 https://github.com/terrapower/armi/pull/1136`_)
#. Calculate block ``PuFrac`` on core loading and after shuffling. (`PR#1165 <https://github.com/terrapower/armi/pull/1165>`_)
#. Add setting ``cyclesSkipTightCouplingInteraction`` to skip coupling interaction on specified cycles. (`PR#1173 <https://github.com/terrapower/armi/pull/1173>`_)

Bug fixes
---------
#. Fixed ``referenceBlockAxialMesh`` and ``axialMesh`` during process loading. (`PR#980 <https://github.com/terrapower/armi/pull/980>`_)
#. Fixed deadelines in MPI cases due to barriers in temp directory changers.
#. Fixed the material namespace order for ``test_axialExpansionChanger.py`` persisting after tests. (`PR#1046 <https://github.com/terrapower/armi/pull/1046>`_)
#. Fixed the gaseous fission products not being removed from the core directly, but instead the fission yields within the lumped fission products were being adjusted. (`PR#1022 <https://github.com/terrapower/armi/pull/1022>`_)
#. Fixed non-fuel depletable components not being initialized with all nuclides with the ``explicitFissionProducts`` model (`PR#1067 <https://github.com/terrapower/armi/pull/1067>`_)
#. Fixed consistency between cross section group manager and lattice physics interface for tight coupling. (`PR#1118 <https://github.com/terrapower/armi/pull/1118>`_)
#. Fixed numerical diffusion in uniform mesh converter that affects number densities and cumulative parameters like DPA. (`PR#992 <https://github.com/terrapower/armi/pull/992>`_)
#. Fix the formula to calculate ``b.p.puFrac``. (`PR#1168 <https://github.com/terrapower/armi/pull/1168>`_)
#. Fixed ``Material.densityTimesHeatCapacity()``, moving from pseudo-density to physical density. (`PR#1129 <https://github.com/terrapower/armi/pull/1129>`_)
#. Fixed ``TD_frac`` modification on UraniumOxide and MOX was not being applied correctly.
#. Fixed Magnessium density curve. (`PR#1126 <https://github.com/terrapower/armi/pull/1126>`_)
#. Fixed Potassium density curve. (`PR#1128 <https://github.com/terrapower/armi/pull/1128>`_)
#. Fixed Concrete density curve. (`PR#1131 <https://github.com/terrapower/armi/pull/1131>`_)
#. Fixed Copper density curve. (`PR#1150 <https://github.com/terrapower/armi/pull/1150>`_)
#. Fixed Component.density. (`PR#1149 <https://github.com/terrapower/armi/pull/1149>`_)

ARMI v0.2.5
===========
Release Date: 2022-10-24

What's new in ARMI
------------------
#. Cleanup of stale ``coveragerc`` file (`PR#923 <https://github.com/terrapower/armi/pull/923>`_)
#. Added `medium` writer style option to ``SettingsWriter``. Added it as arg to modify CLI (`PR#924 <https://github.com/terrapower/armi/pull/924>`_), and to clone CLI (`PR#932 <https://github.com/terrapower/armi/pull/932>`_).
#. Update the EntryPoint class to provide user feedback on required positional arguments (`PR#922 <https://github.com/terrapower/armi/pull/922>`_)
#. Overhaul ``reactor.zones`` tooling and remove application-specific zoning logic (`PR#943 <https://github.com/terrapower/armi/pull/943>`_)

Bug fixes
---------
#. Adjusted density3 in armi/materials/b4C.py to include the theoretical density. (`PR#942 <https://github.com/terrapower/armi/pull/942>`_)
#. Fixed bug in ``fastFlux`` block parameter mapping in the ``UniformMeshConverter`` by applying it to the ``detailedAxialExpansion`` category.
#. Fixed issue where shuffles might duplicate in restart runs.


ARMI v0.2.4
===========
Release Date: 2022-10-03

What's new in ARMI
------------------
#. Added new ``UserPlugin`` functionality.
#. Introduced ``axial expansion changer``.
#. Greatly improved the ``UniformMeshGeometryConverter``.
#. Made the min/max temperatures of ``Material`` curves discoverable.
#. Removed the ``PyYaml`` dependency.
#. Changed the default Git branch name to ``main``.
#. Moved math utilities into their own module.
#. Moved ``newReports`` into their final location in ``armi/bookkeeping/report/``.
#. Removed ``_swapFluxParam`` method (`PR#665 <https://github.com/terrapower/armi/pull/665#discussion_r893348409>`_)
#. Removed the last usage of ``settingsRules``; now only use ``settingsValidation``.
#. Removed separate blueprints in snapshot runs, they must come from the database (`PR#872 https://github.com/terrapower/armi/pull/872`)
#. Added reporting of neutron and gamma energy groups in the XS library ``__repr__``.
#. Updated NHFLUX reader to store VARIANT data that was being discarded.
#. Store thermally expanded block heights at BOL in ``armi/reactor/reactors.py::Core::processLoading``.
#. Added neutronics settings: ``inners`` and ``outers`` for downstream support.
#. Removed unused Thermal Hydraulics settings.
#. Replaced setting ``stationaryBlocks`` with ``stationaryBlockFlags`` setting (`PR#665 <https://github.com/terrapower/armi/pull/665>`_)
#. Changed the default value of the ``trackAssems`` setting to ``False``.
#. Add setting ``inputHeightsConsideredHot`` to enable thermal expansion of assemblies at BOL.


Bug fixes
---------
#. Fixed issues finding ``ISOXX`` files cross-platform.
#. Fixed issues in ``growToFullCore``.
#. Fixed issue in the ARMI memory profiler.
#. Fixed issue in linear expansion in ``Alloy200``.
#. Fixed issue in ``armi/reactor/components/complexShapes.py::Helix::getCircleInnerDiameter``
#. Fixed issue with axial expansion changer in ``armi/reactor/reactors.py::Core::processLoading``.
#. Fixed issue in how number densities are initialized for components.
#. Fixed issue in ``armi/cases/case.py::copyInterfaceInputs``
#. Fixed issue in ``armi/reactor/components/component.py::getReac``
#. Fixed issue in ``armi/reactor/converters/uniformMesh.py`` was clearing out unchanged param data.
#. Fixed issue where components were different if initialized through blueprints vs init.
#. Fixed issue where component mass was conserved in axial expansion instead of density (`PR#846 <https://github.com/terrapower/armi/pull/846>`_)
#. Fixed issue in ``HexBlock::rotatePins`` failed to modify ``pinLocation`` param. (`#855 <https://github.com/terrapower/armi/pull/855>`_)
#. Fixed issue in ``Core::_applyThermalExpansion`` failed to call ``block.completeInitiaLoading``. (`#885 <https://github.com/terrapower/armi/pull/885>`_)
#. Fixed issue where a validator would complain both simple and detailed cycles settings were used.
#. Fixed issue where ``getReactionRates()`` was not accounting for burnup-dependent cross-sections.


ARMI v0.2.3
===========
Release Date: 2022-02-08

What's new in ARMI
------------------
#. Upgrading the version of NumPy for a security alert (`PR#530 <https://github.com/terrapower/armi/pull/530>`_)
#. Upgraded ThoriumOxide material (`PR#558 <https://github.com/terrapower/armi/pull/548>`_)
#. Upgraded Lithium material (`PR#546 <https://github.com/terrapower/armi/pull/546>`_)
#. Improved Helix class (`PR#558 <https://github.com/terrapower/armi/pull/558>`_)

Bug fixes
---------
#. Fixed issue where UML diagrams weren't being generated in docs (`#550 <https://github.com/terrapower/armi/issues/550>`_)
#. Fixed issue with Inconel Alloy 617 (`PR#557 <https://github.com/terrapower/armi/pull/557>`_)


ARMI v0.2.2
===========
Release Date: 2022-01-19

What's new in ARMI v0.2.2
-------------------------
#. Improved type hinting
#. Flushed out the ability to build the docs as PDF
#. Material modifications can now be made per-component
#. The ``loadOperator`` method now has the optional ``allowMissing`` argument

Bug fixes
---------
#. Fixed issue where copying a Setting with a defined list of options would throw an error (`PR#540 <https://github.com/terrapower/armi/pull/540>`_)


ARMI v0.2.1
===========
Release Date: 2022-01-13

What's new in ARMI v0.2.1
-------------------------
#. Added new reference data for lumped fission products (`#507 <https://github.com/terrapower/armi/issues/507>`_)

Bug fixes
---------
#. Fixed issue where grid GUI was not saving lattice maps (`#490 <https://github.com/terrapower/armi/issues/490>`_)
#. Fixed issue where SettingsModifier was using old Settings API (`#500 <https://github.com/terrapower/armi/issues/500>`_)
#. Fixed issue where copying a Setting only copied the default value (`PR#534 <https://github.com/terrapower/armi/pull/534>`_)


ARMI v0.2.0
===========
Release Date: 2021-11-19

The API has started to solidify, and the number of external-facing changes have started to
slow down. This release is a stake in the ground on a stable API.

What's new in ARMI v0.2.0
-------------------------
#. Made user settings immutable to avoid confusing runtime behavior
#. Removed the concept of 'facemaps' (now replaced with more general grids)
#. Added ability to use module-level logging for more precise debugging
#. Added ability to write full tips-up hex asciimaps
#. Fixed ability to serialize grid blueprints
#. Improved code coverage and linting
#. Added a latin hypercube suite builder for parameter sweeps
#. Added several clarifications, fixes, and updates to documentation
#. Updated units labels on several parameters
#. Added protections against deleting directories
#. Updated spontaneous fission data
#. Removed confusing Charge Fuel Pool from core
#. Sped up YAML reading
#. Removed localization module
#. Added ANL116 energy group structure
#. Added setting to control auto-creation of within-block grids
#. Added new plot/summarizing capabilities
#. Added ability for GUI to save map as image
#. Added C5G7 compositions and dimensions to LWR tutorial
#. Added 1d/2d mesh reading/writing to GEODST

Backwards incompatible changes
------------------------------
There may be some new errors based on updated input checking.


Bug fixes
---------
#. Fixed centering of full-symmetry Cartesian lattice maps
#. Fixed issues with grids that had multii-index locations
#. Removed test files from coverage check
#. Fixed order of operations issue in rotatePins
#. Fixed incorrect multiplicity for non-grid block components
#. Many additional bugfixes and cleanups (see PR list)

